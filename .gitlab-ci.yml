image: ruby:2.7.2-alpine

# services:
#   - postgres:12-alpine
#   - redis:alpine

# variables:
#   DOCKER_DRIVER: overlay2
#   DB_PASS: postgres
#   DB_USER: postgres
#   DB_HOST: postgres
#   POSTGRES_HOST_AUTH_METHOD: trust
#   REDIS_URL: redis://redis:6379/0

# test:
#   stage: test
#   script:
#   - apk add --no-cache --update build-base linux-headers postgresql-dev nodejs tzdata postgresql-client less imagemagick
#   - RAILS_ENV=test bundle install --jobs `expr $(cat /proc/cpuinfo | grep -c "cpu cores") - 1` --retry 3
#   - RAILS_ENV=test bundle exec rake db:create
#   - RAILS_ENV=test bundle exec rspec
#   tags:
#     - docker

# develop:
#   stage: deploy
#   script:
#   - apk add curl git
#   - gem install dpl --pre
#   - dpl heroku api --app=NOME_DO_APP_DEV --api-key=$HEROKU_API_KEY
#   only:
#     - develop
#   tags:
#     - docker

stages:
  - lint
  # - test
  - deploy

production-deploy:
  image: rdmapps/ruby_dpl
  stage: deploy
  script:
    - dpl --provider=heroku --app=rdmapps --api-key=$HEROKU_API_KEY
  only:
    - main
  tags:
    - docker

production-pronto:
  image: arcadiandigital/docker-pronto
  stage: lint
  script:
    - pronto run -c=origin/flyio --exit-code
  only:
    - main
  tags:
    - docker

develop-deploy:
  image: golang:1.13
  before_script:
    - apt-get update -qq && apt-get install -y curl
    - curl -L https://fly.io/install.sh | sh
  stage: deploy
  script:
    - /root/.fly/bin/flyctl deploy
  only:
    - develop
  tags:
    - docker

develop-pronto:
  image: rdmapps/ruby_dpl
  variables:
    PRONTO_GITLAB_API_ENDPOINT: "https://gitlab.roadmaps.com.br/api/v4"
  stage: lint
  script:
    - git fetch
    - pronto run -f gitlab_mr -c origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
  only:
    - merge_requests
  tags:
    - docker
